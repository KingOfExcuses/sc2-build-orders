import { type NextPage } from 'next'
import Head from 'next/head'
import Link from 'next/link'
import { useRouter } from 'next/router'
import { useState } from 'react'
import { trpc } from '../utils/trpc'

const Home: NextPage = () => {
  const createBuild = trpc.builds.createBuild.useMutation()
  const router = useRouter()
  const [matchup, setMatchup] = useState('')
  const [title, setTitle] = useState('')
  const [build, setBuild] = useState('')

  async function handleSubmitBuildOrder(e: React.FormEvent) {
    e.preventDefault()
    await createBuild.mutateAsync({
      matchup,
      title,
      build,
    })
    router.push('/builds')
  }

  return (
    <>
      <Head>
        <title>Submit a Build</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c] px-4">
        <h1 className="text-xl">Submit a Build Order</h1>
        <Link href="/" className="m-8">
          Home Page{' '}
        </Link>
        <form onSubmit={handleSubmitBuildOrder}>
          <label
            htmlFor="match-up-select"
            className="mb-2 block text-sm font-medium"
          >
            Select Matchup
          </label>
          <select
            required
            value={matchup}
            onChange={(e) => setMatchup(e.target.value)}
            id="match-up-select"
            className="block w-full rounded-lg border border-gray-300 bg-gray-50 p-2.5 text-sm text-gray-900 focus:border-blue-500 focus:ring-blue-500"
          >
            <option value="">Choose the matchup</option>
            <option value="tvp">TvP</option>
            <option value="tvt">TvT</option>
            <option value="tvz">TvZ</option>
          </select>
          <label
            htmlFor="title"
            className="mb-2 block pt-4 text-sm font-medium"
          >
            Build Title
          </label>
          <input
            required
            minLength={10}
            maxLength={100}
            value={title}
            onChange={(e) => setTitle(e.target.value)}
            id="title"
            type="text"
            className="block w-full rounded-lg border border-gray-300 bg-gray-50 p-2.5 text-sm text-gray-900 focus:border-blue-500 focus:ring-blue-500"
          />

          <label
            htmlFor="build"
            className="mb-2 block pt-4 text-sm font-medium"
          >
            Your build
          </label>
          <textarea
            required
            rows={4}
            className="block w-full rounded-lg border border-gray-300 bg-gray-50 p-2.5 text-sm text-gray-900"
            placeholder="Insert your build here..."
            value={build}
            onChange={(e) => setBuild(e.target.value)}
          ></textarea>
          <button
            type="submit"
            className="mb-2 mt-4 rounded-lg bg-gray-800 px-5 py-2.5 text-sm font-medium text-white hover:bg-gray-900 focus:outline-none focus:ring-4 focus:ring-gray-300"
          >
            Submit Build
          </button>
        </form>
      </main>
    </>
  )
}

export default Home
