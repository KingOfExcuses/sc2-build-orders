import { type NextPage } from 'next'
import Head from 'next/head'
import { useRouter } from 'next/router'
import { useState } from 'react'
import { trpc } from '../utils/trpc'
import { buildTypes } from './matchups/[race]/vs/[raceOpponent]'

const Home: NextPage = () => {
  const createBuild = trpc.builds.createBuild.useMutation()
  const router = useRouter()
  const [matchup, setMatchup] = useState('')
  const [title, setTitle] = useState('')
  const [build, setBuild] = useState('')
  const [style, setStyle] = useState('')
  const isButtonDisabled = title.length === 10 || build.length === 0

  async function handleSubmitBuildOrder(e: React.FormEvent) {
    e.preventDefault()
    await createBuild.mutateAsync({
      matchup,
      title,
      build,
      style,
    })
    router.push('/builds')
  }

  return (
    <>
      <Head>
        <title>Submit a Build</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="container m-auto flex h-screen flex-col justify-center p-12">
        <h1 className="items-center py-8 text-xl">Submit a Build Order</h1>
        <form onSubmit={handleSubmitBuildOrder}>
          <fieldset>
            <div className="flex w-1/4 justify-between gap-8">
              <div className="w-1/2">
                <label
                  className="mb-2 block text-sm font-medium"
                  htmlFor="matchup"
                >
                  Matchup
                </label>
                <select
                  className="mb-4 block w-full rounded-lg p-2.5 text-sm font-medium text-gray-dark"
                  required
                  value={matchup}
                  onChange={(e) => setMatchup(e.target.value)}
                  id="matchup"
                >
                  <option value="tvp">TvP</option>
                  <option value="tvt">TvT</option>
                  <option value="tvz">TvZ</option>
                </select>
              </div>
              <div className="w-1/2">
                <label
                  className="mb-2 block text-sm font-medium"
                  htmlFor="style"
                >
                  Build Type
                </label>
                <select
                  className="block w-full rounded-lg p-2.5 text-sm font-medium text-gray-dark"
                  required
                  value={style}
                  onChange={(e) => setStyle(e.target.value)}
                  id="style"
                >
                  {buildTypes.map((buildType) => (
                    <option key={buildType} value={buildType}>
                      {buildType}
                    </option>
                  ))}
                </select>
              </div>
            </div>
            <div className="w-1/2">
              <label className="mb-2 block text-sm font-medium" htmlFor="title">
                Build Title
              </label>
              <input
                className="block w-full rounded-lg p-2.5 text-sm font-medium text-gray-dark"
                required
                minLength={10}
                maxLength={100}
                placeholder="Insert build title here..."
                value={title}
                onChange={(e) => setTitle(e.target.value)}
                id="title"
                type="text"
              />
              <label
                htmlFor="build"
                className="mb-2 block pt-4 text-sm font-medium"
              >
                Build
              </label>
              <textarea
                className="block w-full rounded-lg p-2.5 text-sm font-medium text-gray-dark"
                required
                rows={20}
                placeholder="Insert your build here..."
                value={build}
                onChange={(e) => setBuild(e.target.value)}
              ></textarea>
            </div>
          </fieldset>

          <button
            className="mb-2 mt-4 rounded-lg bg-orange px-5 py-2.5 text-sm font-medium hover:bg-white hover:text-navy disabled:cursor-not-allowed disabled:opacity-10"
            disabled={isButtonDisabled}
            type="submit"
          >
            Submit Build
          </button>
        </form>
      </main>
    </>
  )
}

export default Home
